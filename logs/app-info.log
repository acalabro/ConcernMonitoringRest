2023-09-01T17:51:15.718+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-01T17:51:15.720+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-01T17:51:15.722+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-01T17:51:15.966+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-01T17:51:15.966+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-01T17:51:16.335+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-01T17:51:16.357+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-01T17:51:16.544+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-01T17:51:29.673+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T17:51:29.690+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T17:51:29.690+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T17:51:29.701+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	rule "SimpleCgheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
		rule "SimpleCtyuytutheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplrtytryeCheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpleewrweCheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpqweqweleCheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplasdeCheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpaleCheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
2023-09-01T17:51:30.166+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T17:51:30.168+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 7
2023-09-01T17:52:05.867+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-01T17:52:05.868+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-01T17:52:05.871+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-01T17:52:06.121+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-01T17:52:06.121+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-01T17:52:06.471+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-01T17:52:06.491+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-01T17:52:06.686+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-01T17:52:18.213+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T17:52:18.264+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T17:52:18.265+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T17:52:18.277+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	rule "SimpleCgheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
		rule "SimpleCtyuytutheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplrtytryeCheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpleewrweCheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpqweqweleCheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplasdeCheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpaleCheck"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
2023-09-01T17:52:18.794+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T17:52:18.796+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 7
2023-09-01T17:54:04.967+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T17:54:04.985+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T17:54:04.986+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T17:54:04.986+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	rule "SimpleCgheck1"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
		rule "SimpleCtyuytutheck2"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplrtytryeCheck3"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpleewrweCheck4"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpqweqweleCheck5"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplasdeCheck6"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpaleCheck7"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
2023-09-01T17:54:05.048+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T17:54:05.048+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 14
2023-09-01T17:55:21.675+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T17:55:21.690+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T17:55:21.691+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T17:55:21.691+0200 [ActiveMQ Session Task-3] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	rule "SimpleCgheck11"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
		rule "SimpleCtyuytutheck22"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplrtytryeCheck33"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpleewrweCheck44"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpqweqweleCheck55"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplasdeCheck66"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpaleCheck77"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
2023-09-01T17:55:21.766+0200 [ActiveMQ Session Task-3] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T17:55:21.767+0200 [ActiveMQ Session Task-3] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 21
2023-09-01T17:57:36.522+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-01T17:57:36.524+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-01T17:57:36.526+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-01T17:57:36.815+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-01T17:57:36.815+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-01T17:57:37.164+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-01T17:57:37.183+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-01T17:57:37.371+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-01T17:57:46.470+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T17:57:46.487+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T17:57:46.488+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T17:57:46.498+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end


rule "autogenRule0"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck0"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage0"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule1"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck1"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage1"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule2"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck2"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage2"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule3"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck3"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage3"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule4"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck4"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage4"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule5"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck5"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage5"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule6"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck6"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage6"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
2023-09-01T17:57:47.142+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T17:57:47.143+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: java.lang 0
2023-09-01T17:57:47.144+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 21
2023-09-01T17:58:20.174+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-01T17:58:20.175+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-01T17:58:20.178+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-01T17:58:20.423+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-01T17:58:20.423+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-01T17:58:20.812+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-01T17:58:20.831+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-01T17:58:21.017+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-01T17:58:25.922+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T17:58:25.945+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T17:58:25.945+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T17:58:25.959+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end


rule "autogenRule0"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck0"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage0"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule1"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck1"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage1"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule2"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck2"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage2"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule3"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck3"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage3"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule4"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck4"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage4"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule5"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck5"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage5"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule6"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck6"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage6"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
2023-09-01T17:58:26.777+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T17:58:26.778+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: java.lang 0
2023-09-01T17:58:26.779+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 21
2023-09-01T18:01:18.534+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:01:18.571+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:01:18.571+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:01:18.573+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end


rule "autogenRule10"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck10"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage110"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule11"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck11"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage11"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule12"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck12"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage12"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule13"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck31"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage31"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule14"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck14"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage14"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule15"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck15"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage15"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule16"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck16"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage16"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
2023-09-01T18:01:18.774+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:01:18.774+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: java.lang 0
2023-09-01T18:01:18.775+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 42
2023-09-01T18:02:56.624+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:02:56.643+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:02:56.644+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:02:56.644+0200 [ActiveMQ Session Task-3] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end


rule "autogenRule10324"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck10234"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage1102342"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule114324"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck12321"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage123321"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule123322"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck123232"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage123232"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule13232"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck3231"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage3441"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule1334"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck3314"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage1334"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule3315"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck315"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage135"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule136"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck136"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage136"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
2023-09-01T18:02:56.853+0200 [ActiveMQ Session Task-3] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:02:56.853+0200 [ActiveMQ Session Task-3] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: java.lang 0
2023-09-01T18:02:56.853+0200 [ActiveMQ Session Task-3] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 63
2023-09-01T18:10:33.490+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-01T18:10:33.492+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-01T18:10:33.494+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-01T18:10:33.737+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-01T18:10:33.737+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-01T18:10:34.100+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-01T18:10:34.119+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-01T18:10:34.311+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-01T18:10:40.393+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:10:40.416+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:10:40.417+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:10:40.427+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 	
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	
	rule "localGlobalAvgDelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
	
		
	
	rule "localGlobalAvgDqweelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgwqeDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAvqweqwerage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
		
	
	rule "localGlobalAvgDeldfgdfgayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgDelafdgdfyCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAdfgdfverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
		
	
	rule "localGlobalAvgDeerfegegflayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAverfererfegDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculate23rewdewAverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
		
	
	rule "localGlobalAvgDelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
2023-09-01T18:11:12.051+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-01T18:11:12.053+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-01T18:11:12.056+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-01T18:11:12.294+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-01T18:11:12.294+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-01T18:11:12.680+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-01T18:11:12.698+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-01T18:11:12.882+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-01T18:11:16.422+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:11:16.454+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:11:16.454+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:11:16.464+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 	
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	
	rule "localGlobalAvgDelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
	
		
	
	rule "localGlobalAvgDqweelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgwqeDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAvqweqwerage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
		
	
	rule "localGlobalAvgDeldfgdfgayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgDelafdgdfyCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAdfgdfverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
		
	
	rule "localGlobalAvgDeerfegegflayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAverfererfegDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculate23rewdewAqwewrwedwefweverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
		
	
	rule "localGlobalAvgDeqweqweqwewqeqwelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
2023-09-01T18:11:17.095+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:11:17.096+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: java.lang 0
2023-09-01T18:11:17.096+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 13
2023-09-01T18:11:32.088+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-01T18:11:32.090+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-01T18:11:32.093+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-01T18:11:32.343+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-01T18:11:32.343+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-01T18:11:32.696+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-01T18:11:32.714+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-01T18:11:32.898+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-01T18:11:38.287+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:11:38.304+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:11:38.304+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:11:38.314+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 	
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	
	rule "localGlobalAvgDelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
	
		
	
	rule "localGlobalAvgDqweelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgwqeDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAvqweqwerage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
		
	
	rule "localGlobalAvgDeldfgdfgayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgDelafdgdfyCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAdfgdfverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
		
	
	rule "localGlobalAvgDeerfegegflayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAverfererfegDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculate23rewdewAqwewrwedwefweverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
		
	
	rule "localGlobalAvgDeqweqweqwewqeqwelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
2023-09-01T18:11:39.024+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:11:39.026+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: java.lang 0
2023-09-01T18:11:39.026+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 13
2023-09-01T18:12:02.636+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-01T18:12:02.638+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-01T18:12:02.641+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-01T18:12:02.880+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-01T18:12:02.880+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-01T18:12:03.231+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-01T18:12:03.249+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-01T18:12:03.427+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-01T18:12:34.833+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:12:34.853+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:12:34.853+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:12:34.864+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 	
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	
	rule "localGlobalAvgDelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
	
		
	
	rule "localGlobalAvgDqweelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgwqeDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAvqweqwerage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
		
	
	rule "localGlobalAvgDeldfgdfgayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgDelafdgdfyCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAdfgdfverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
		
	
	rule "localGlobalAvgDeerfegegflayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAverfererfegDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculate23rewdewAqwewrwedwefweverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
		
	
	rule "localGlobalAvgDeqweqweqwewqeqwelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
		
	rule "calculate23rewdewAqwewrwedwerwerwefweverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
		
	
	rule "localGlobalAvgDeqweqweqwewqwewqeewqeqwelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
2023-09-01T18:12:35.521+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:12:35.523+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: java.lang 0
2023-09-01T18:12:35.523+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 15
2023-09-01T18:20:14.188+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-01T18:20:14.189+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-01T18:20:14.193+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-01T18:20:14.436+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-01T18:20:14.437+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-01T18:20:14.808+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-01T18:20:14.826+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-01T18:20:15.004+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-01T18:20:44.400+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:20:44.419+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:20:44.419+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:20:44.429+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 	
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	
	rule "localGlobalAvgDelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
2023-09-01T18:20:44.827+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:20:44.828+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 1
2023-09-01T18:21:24.087+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:21:24.103+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:21:24.103+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:21:24.104+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 	
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	
	rule "localGlobalAvgDqqqqqqqqqqqqqqqqqqqqqqelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
	
		
	
	rule "localGlobalAvgDqweelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgwqeDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAvqweqwerage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
		
	
	rule "localGlobalAvgDeldfgdfgayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAvgDelafdgdfyCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculateAdfgdfverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
		
	
	rule "localGlobalAvgDeerfegegflayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobalAverfererfegDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculate23rewdewAqwewrwedwefweverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
		
	
	rule "localGlobalAvgDeqweqweqwewqeqwelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
		
	rule "calculate23rewdewAqwewrwedwerwerwefweverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
		
	
	rule "localGlobalAvgDeqweqweqwewqwewqeewqeqwelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
2023-09-01T18:21:24.379+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:21:24.380+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: java.lang 0
2023-09-01T18:21:24.380+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 16
2023-09-01T18:22:20.073+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:22:20.098+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:22:20.099+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:22:20.100+0200 [ActiveMQ Session Task-3] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 	
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	
	rule "localGlobsdfalAvgDqqqqqqqqqqqqqqqqqqqqqqelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobsdfalAvgDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculatsdfeAverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
	
		
	
	rule "localGlobalsdfdsfAvgDqweelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlobasdfsdflAvgwqeDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculatesdfsdfAvqweqwerage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
		
	
	rule "localGlosdfsdfbalAvgDeldfgdfgayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlodsfsdfbalAvgDelafdgdfyCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculasdfsdfteAdfgdfverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
		
	
	rule "localGlsdfsdfobalAvgDeerfegegflayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	rule "localGlosdfsdfbalAverfererfegDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	
	
	rule "calculate2sdfdsf3rewdewAqwewrwedwefweverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
		
	
	rule "localGlsdfdsfobalAvgDeqweqweqwewqeqwelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
		
	rule "calculasdfdsfte23rewdewAqwewrwedwerwerwefweverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
2023-09-01T18:22:20.303+0200 [ActiveMQ Session Task-3] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:22:20.303+0200 [ActiveMQ Session Task-3] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: java.lang 0
2023-09-01T18:22:20.303+0200 [ActiveMQ Session Task-3] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 30
2023-09-01T18:23:52.373+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-01T18:23:52.375+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-01T18:23:52.378+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-01T18:23:52.631+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-01T18:23:52.631+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-01T18:23:52.996+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-01T18:23:53.017+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-01T18:23:53.209+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-01T18:24:06.671+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:24:06.696+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:24:06.697+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:24:06.707+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules //created on: Nov 30, 2021
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

rule "autogenRule0"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule1"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule2"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule3"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule4"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule5"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule6"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule7"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule8"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule9"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

2023-09-01T18:24:07.180+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:24:07.182+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 10
2023-09-01T18:25:37.348+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:25:37.391+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:25:37.391+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:25:37.393+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules //created on: Nov 30, 2021
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

rule "autogenRule01"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule11"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule21"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule31"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule41"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule51"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule61"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule71"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule81"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule91"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

2023-09-01T18:25:37.494+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:25:37.495+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 20
2023-09-01T18:29:42.703+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-01T18:29:42.705+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-01T18:29:42.707+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-01T18:29:42.962+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-01T18:29:42.962+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-01T18:29:43.377+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-01T18:29:43.399+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-01T18:29:43.608+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-01T18:30:00.767+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:30:00.785+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:30:00.785+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:30:00.795+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules //created on: Nov 30, 2021
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

rule "autogenRule01"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin1",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule02"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin2",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

2023-09-01T18:30:01.181+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:30:01.183+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 2
2023-09-01T18:31:48.431+0200 [main] INFO  it.cnr.isti.labsedc.concern.Probe - .......sending probe message
2023-09-01T18:32:29.057+0200 [main] INFO  it.cnr.isti.labsedc.concern.Probe - .......sending probe message
2023-09-01T18:33:20.483+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-01T18:33:20.485+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-01T18:33:20.487+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-01T18:33:20.723+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-01T18:33:20.723+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-01T18:33:21.093+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-01T18:33:21.112+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-01T18:33:21.309+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-01T18:33:33.566+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:33:33.587+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:33:33.588+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:33:33.598+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules //created on: Nov 30, 2021
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

rule "autogenRule01"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin1",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule02"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin2",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

2023-09-01T18:33:34.010+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:33:34.011+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 2
2023-09-01T18:34:11.852+0200 [main] INFO  it.cnr.isti.labsedc.concern.Probe - .......sending probe message
2023-09-01T18:38:25.980+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-01T18:38:25.981+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-01T18:38:25.984+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-01T18:38:26.253+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-01T18:38:26.253+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-01T18:38:26.648+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-01T18:38:26.667+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-01T18:38:26.849+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-01T18:38:31.499+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-01T18:38:31.518+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-01T18:38:31.519+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-01T18:38:31.529+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules //created on: Nov 30, 2021
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

rule "autogenRule01"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule02"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin2",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

2023-09-01T18:38:31.933+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:38:31.935+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 2
2023-09-01T18:38:49.698+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Creating Message 
2023-09-01T18:38:49.717+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Publishing message  
2023-09-01T18:38:49.718+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Forecasted sequence: Connection in 4 seconds.
2023-09-01T18:38:49.735+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.rules.RulesGenerator - -------------Received forecasting from DT-------------
2023-09-01T18:38:49.743+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.rules.RulesGenerator - -------------Auto-generated rule sent for injection-------------
2023-09-01T18:38:49.743+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

rule "autogen-rule-noSession-DigitalTwin-rule"
	no-loop
	salience 10
	dialect "java"

	when

	$0Event : ConcernBaseEvent(
	this.getName == "Connection",
 	this.getSenderID == "DT_probe",
	this.getSessionID == "noSession");
	
	then

	KieLauncher.printer("rule autogen-rule-noSession-DigitalTwin-rule matched");
end
2023-09-01T18:38:49.792+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:38:49.793+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 3
2023-09-01T18:39:56.681+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Creating Message 
2023-09-01T18:39:56.700+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Publishing message  
2023-09-01T18:39:56.701+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Forecasted sequence: Connection in 4 seconds.
2023-09-01T18:39:56.703+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.rules.RulesGenerator - -------------Received forecasting from DT-------------
2023-09-01T18:39:56.707+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.rules.RulesGenerator - -------------Auto-generated rule sent for injection-------------
2023-09-01T18:39:56.707+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

rule "autogen-rule-noSession-DigitalTwin2-rule"
	no-loop
	salience 10
	dialect "java"

	when

	$0Event : ConcernBaseEvent(
	this.getName == "Connection",
 	this.getSenderID == "DT_probe",
	this.getSessionID == "noSession");
	
	then

	KieLauncher.printer("rule autogen-rule-noSession-DigitalTwin2-rule matched");
end
2023-09-01T18:39:56.745+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-01T18:39:56.745+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 4
2023-09-04T10:50:03.459+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T10:50:03.465+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T10:50:03.475+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T10:50:03.853+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T10:50:03.854+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T10:50:04.606+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T10:50:04.644+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T13:58:56.213+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T13:58:56.226+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T13:58:56.246+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T13:58:57.138+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T13:58:57.138+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T13:58:59.579+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T13:58:59.747+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T13:59:00.956+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T13:59:16.754+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T13:59:16.761+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T13:59:16.770+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T13:59:17.189+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T13:59:17.189+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T13:59:17.953+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T13:59:18.035+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T13:59:18.764+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T14:25:19.275+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T14:25:19.276+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T14:25:19.279+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T14:25:19.634+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T14:25:19.634+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T14:25:19.874+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T14:25:19.893+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T14:25:20.076+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T14:26:21.673+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-04T14:26:21.705+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-04T14:26:21.705+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-04T14:26:21.716+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	rule "SimpleCgheck11"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
		rule "SimpleCtyuytutheck22"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplrtytryeCheck33"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpleewrweCheck44"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpqweqweleCheck55"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplasdeCheck66"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpaleCheck77"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
	
2023-09-04T14:26:22.166+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-04T14:26:22.167+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 7
2023-09-04T14:28:07.347+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T14:28:07.349+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T14:28:07.352+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T14:28:07.631+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T14:28:07.631+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T14:28:07.884+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T14:28:07.907+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T14:28:08.081+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T14:28:12.224+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T14:28:12.225+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T14:28:12.228+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T14:28:12.436+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T14:28:12.436+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T14:28:12.693+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T14:28:12.753+0200 [Thread-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T14:28:12.955+0200 [Thread-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T14:28:25.483+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T14:28:25.485+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T14:28:25.488+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T14:28:25.768+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T14:28:25.769+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T14:28:26.007+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T14:28:26.027+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T14:28:26.232+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T14:28:41.771+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-04T14:28:41.802+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-04T14:28:41.803+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-04T14:28:41.814+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	rule "SimpleCgheck11"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
		rule "SimpleCtyuytutheck22"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner1", 
									this.getDestinationID == "GlobalPlanner1");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplrtytryeCheck33"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner2", 
									this.getDestinationID == "GlobalPlanner2");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpleewrweCheck44"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner3", 
									this.getDestinationID == "GlobalPlanner3");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpqweqweleCheck55"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner4", 
									this.getDestinationID == "GlobalPlanner4");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplasdeCheck66"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner5", 
									this.getDestinationID == "GlobalPlanner5");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpaleCheck77"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner6", 
									this.getDestinationID == "GlobalPlanner6");
									
	then					                 
		retract($aEvent);
	end
	
	
2023-09-04T14:28:42.265+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-04T14:28:42.265+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 7
2023-09-04T14:33:27.131+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T14:33:27.133+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T14:33:27.136+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T14:33:27.419+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T14:33:27.420+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T14:33:27.671+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T14:33:27.691+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T14:33:27.882+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T14:33:43.731+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-04T14:33:43.771+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-04T14:33:43.772+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-04T14:33:43.798+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	rule "SimpleCgheck11"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
		rule "SimpleCtyuytutheck22"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner1", 
									this.getDestinationID == "GlobalPlanner1");
									
	then					                 
		retract($aEvent);
	KieLauncher.printer("EventRetracted ");
	end
	
	
		rule "SimplrtytryeCheck33"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner2", 
									this.getDestinationID == "GlobalPlanner2");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpleewrweCheck44"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner3", 
									this.getDestinationID == "GlobalPlanner3");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpqweqweleCheck55"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner4", 
									this.getDestinationID == "GlobalPlanner4");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplasdeCheck66"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner5", 
									this.getDestinationID == "GlobalPlanner5");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpaleCheck77"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner6", 
									this.getDestinationID == "GlobalPlanner6");
									
	then					                 
		retract($aEvent);
	end
	
	
2023-09-04T14:33:44.397+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-04T14:33:44.398+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 7
2023-09-04T14:33:55.293+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Creating Message 
2023-09-04T14:33:55.307+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Publishing message  
2023-09-04T14:33:55.308+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Forecasted sequence: Connection in 4 seconds.
2023-09-04T14:34:20.445+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T14:34:20.448+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T14:34:20.451+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T14:34:20.716+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T14:34:20.716+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T14:34:20.974+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T14:34:20.997+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T14:34:21.193+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T14:34:24.628+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-04T14:34:24.650+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-04T14:34:24.650+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-04T14:34:24.661+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	rule "SimpleCgheck11"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
		rule "SimpleCtyuytutheck22"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner1", 
									this.getDestinationID == "GlobalPlanner1");
									
	then					                 
		retract($aEvent);
	KieLauncher.printer("EventRetracted ");
	end
	
	
		rule "SimplrtytryeCheck33"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner2", 
									this.getDestinationID == "GlobalPlanner2");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpleewrweCheck44"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner3", 
									this.getDestinationID == "GlobalPlanner3");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpqweqweleCheck55"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner4", 
									this.getDestinationID == "GlobalPlanner4");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplasdeCheck66"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner5", 
									this.getDestinationID == "GlobalPlanner5");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpaleCheck77"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner6", 
									this.getDestinationID == "GlobalPlanner6");
									
	then					                 
		retract($aEvent);
	end
	
	
2023-09-04T14:34:25.227+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-04T14:34:25.227+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 7
2023-09-04T14:34:29.486+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Creating Message 
2023-09-04T14:34:29.500+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Publishing message  
2023-09-04T14:34:29.501+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Forecasted sequence: Connection in 4 seconds.
2023-09-04T14:34:57.794+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T14:34:57.796+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T14:34:57.800+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T14:34:58.084+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T14:34:58.084+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T14:34:58.323+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T14:34:58.345+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T14:34:58.525+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T14:35:03.343+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-04T14:35:03.365+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-04T14:35:03.365+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-04T14:35:03.380+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	rule "SimpleCgheck11"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
		rule "SimpleCtyuytutheck22"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner1", 
									this.getDestinationID == "GlobalPlanner1");
									
	then					                 
		retract($aEvent);
	KieLauncher.printer("EventRetracted ");
	end
	
	
		rule "SimplrtytryeCheck33"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner2", 
									this.getDestinationID == "GlobalPlanner2");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpleewrweCheck44"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner3", 
									this.getDestinationID == "GlobalPlanner3");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpqweqweleCheck55"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner4", 
									this.getDestinationID == "GlobalPlanner4");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplasdeCheck66"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner5", 
									this.getDestinationID == "GlobalPlanner5");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpaleCheck77"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner6", 
									this.getDestinationID == "GlobalPlanner6");
									
	then					                 
		retract($aEvent);
	end
	
	
2023-09-04T14:35:03.848+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-04T14:35:03.848+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 7
2023-09-04T14:36:45.529+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T14:36:45.531+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T14:36:45.534+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T14:36:45.790+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T14:36:45.790+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T14:36:45.999+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T14:36:46.021+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T14:36:46.238+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T14:36:51.596+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-04T14:36:51.615+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-04T14:36:51.616+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-04T14:36:51.627+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end
	
	
	rule "SimpleCgheck11"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end
	
		rule "SimpleCtyuytutheck22"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner1", 
									this.getDestinationID == "GlobalPlanner1");
									
	then					                 
		retract($aEvent);
	KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
	
	
		rule "SimplrtytryeCheck33"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner2", 
									this.getDestinationID == "GlobalPlanner2");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpleewrweCheck44"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner3", 
									this.getDestinationID == "GlobalPlanner3");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpqweqweleCheck55"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner4", 
									this.getDestinationID == "GlobalPlanner4");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimplasdeCheck66"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner5", 
									this.getDestinationID == "GlobalPlanner5");
									
	then					                 
		retract($aEvent);
	end
	
	
		rule "SimpaleCheck77"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner6", 
									this.getDestinationID == "GlobalPlanner6");
									
	then					                 
		retract($aEvent);
	end
	
	
2023-09-04T14:36:52.069+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-04T14:36:52.069+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 7
2023-09-04T14:42:31.920+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T14:42:31.921+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T14:42:31.924+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T14:42:32.187+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T14:42:32.188+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T14:42:32.440+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T14:42:32.459+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T14:42:32.668+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T14:42:40.577+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-04T14:42:40.596+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-04T14:42:40.597+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-04T14:42:40.611+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end


rule "autogenRule10324"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck10234"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage1102342"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule114324"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck12321"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage123321"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule123322"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck123232"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage123232"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule13232"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck3231"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage3441"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule1334"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck3314"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage1334"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule3315"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck315"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage135"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule136"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck136"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage136"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
2023-09-04T14:42:41.311+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-04T14:42:41.312+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: java.lang 0
2023-09-04T14:42:41.312+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 21
2023-09-04T14:43:57.282+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T14:43:57.285+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T14:43:57.289+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T14:43:57.525+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T14:43:57.526+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T14:43:57.777+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T14:43:57.801+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T14:43:58.022+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T14:44:04.163+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-04T14:44:04.191+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-04T14:44:04.192+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-04T14:44:04.209+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end


rule "autogenRule10324"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck10234"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer(System.currentTimeMillis() + " latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage1102342"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule114324"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck12321"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage123321"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule123322"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck123232"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage123232"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule13232"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck3231"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage3441"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule1334"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck3314"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage1334"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule3315"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck315"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage135"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule136"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck136"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage136"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
2023-09-04T14:44:05.301+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-04T14:44:05.302+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: java.lang 0
2023-09-04T14:44:05.302+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 21
2023-09-04T14:59:20.093+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T14:59:20.095+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T14:59:20.099+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T14:59:20.360+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T14:59:20.360+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T14:59:20.606+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T14:59:20.629+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T14:59:20.819+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T14:59:28.425+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-04T14:59:28.462+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-04T14:59:28.463+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-04T14:59:28.474+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules //created on: Nov 30, 2021
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

rule "autogenRule01"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule02"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin2",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule03"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin3",
this.getDestinationID == "Monitoring3");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule04"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin4",
this.getDestinationID == "Monitoring4");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule05"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin5",
this.getDestinationID == "Monitoring5");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule06"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin6",
this.getDestinationID == "Monitoring6");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule07"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin7",
this.getDestinationID == "Monitoring7");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule08"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin8",
this.getDestinationID == "Monitoring8");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule09"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin9",
this.getDestinationID == "Monitoring9");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule12"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin10",
this.getDestinationID == "Monitoring10");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

2023-09-04T14:59:29.004+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-04T14:59:29.005+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 10
2023-09-04T15:11:53.160+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Creating Message 
2023-09-04T15:11:53.175+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Publishing message  
2023-09-04T15:11:53.177+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Forecasted sequence: Connection in 4 seconds.
2023-09-04T15:11:53.197+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.rules.RulesGenerator - -------------Received forecasting from DT-------------
2023-09-04T15:11:53.203+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.rules.RulesGenerator - -------------Auto-generated rule sent for injection-------------
2023-09-04T15:11:53.203+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

rule "autogen-rule-noSession-DigitalTwin2-rule"
	no-loop
	salience 10
	dialect "java"

	when

	$0Event : ConcernBaseEvent(
	this.getName == "Connection",
 	this.getSenderID == "DT_probe",
	this.getSessionID == "noSession");
	
	then

	KieLauncher.printer("rule autogen-rule-noSession-DigitalTwin2-rule matched");
end
2023-09-04T15:11:53.261+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-04T15:11:53.261+0200 [ActiveMQ Session Task-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 11
2023-09-04T15:14:21.012+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T15:14:21.014+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T15:14:21.017+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T15:14:21.252+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T15:14:21.252+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T15:14:21.459+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T15:14:21.477+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T15:14:21.654+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T15:14:29.055+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-04T15:14:29.088+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-04T15:14:29.089+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-04T15:14:29.105+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules //created on: Nov 30, 2021
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

rule "autogenRule01"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule02"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin2",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule03"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin3",
this.getDestinationID == "Monitoring3");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule04"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin4",
this.getDestinationID == "Monitoring4");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule05"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin5",
this.getDestinationID == "Monitoring5");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule06"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin6",
this.getDestinationID == "Monitoring6");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule07"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin7",
this.getDestinationID == "Monitoring7");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule08"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin8",
this.getDestinationID == "Monitoring8");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule09"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin9",
this.getDestinationID == "Monitoring9");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule12"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin10",
this.getDestinationID == "Monitoring10");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

2023-09-04T15:14:29.603+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-04T15:14:29.603+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 10
2023-09-04T15:14:55.166+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-04T15:14:55.168+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-04T15:14:55.171+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-04T15:14:55.452+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-04T15:14:55.452+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-04T15:14:55.663+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-04T15:14:55.681+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-04T15:14:55.857+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-04T15:15:02.168+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-04T15:15:02.202+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-04T15:15:02.203+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-04T15:15:02.216+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules //created on: Nov 30, 2021
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

rule "autogenRule01"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule02"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin2",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule03"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin3",
this.getDestinationID == "Monitoring3");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule04"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin4",
this.getDestinationID == "Monitoring4");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule05"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin5",
this.getDestinationID == "Monitoring5");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule06"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin6",
this.getDestinationID == "Monitoring6");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule07"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin7",
this.getDestinationID == "Monitoring7");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule08"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin8",
this.getDestinationID == "Monitoring8");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

rule "autogenRule09"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin9",
this.getDestinationID == "Monitoring9");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end


rule "autogenRule12"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin10",
this.getDestinationID == "Monitoring10");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

2023-09-04T15:15:02.683+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-04T15:15:02.683+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 10
2023-09-04T15:15:28.271+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Creating Message 
2023-09-04T15:15:28.284+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Publishing message  
2023-09-04T15:15:28.286+0200 [main] INFO  it.cnr.isti.labsedc.concern.probe.DTProbe - Forecasted sequence: Connection in 4 seconds.
2023-09-04T15:15:28.313+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.rules.RulesGenerator - -------------Received forecasting from DT-------------
2023-09-04T15:15:28.321+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.rules.RulesGenerator - -------------Auto-generated rule sent for injection-------------
2023-09-04T15:15:28.321+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

rule "autogen-rule-noSession-DigitalTwin2-rule"
	no-loop
	salience 10
	dialect "java"

	when

	$0Event : ConcernBaseEvent(
	this.getName == "Connection",
 	this.getSenderID == "DT_probe",
	this.getSessionID == "noSession");
	
	then

	KieLauncher.printer(System.currentTimeMillis() + "rule autogen-rule-noSession-DigitalTwin2-rule matched");
end
2023-09-04T15:15:28.373+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-04T15:15:28.373+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 11
2023-09-05T17:06:43.437+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-05T17:06:43.439+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-05T17:06:43.442+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-05T17:06:43.733+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-05T17:06:43.733+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-05T17:06:43.954+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-05T17:06:43.972+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-05T17:06:44.176+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-05T17:07:00.354+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-05T17:07:00.424+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-05T17:07:00.424+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-05T17:07:00.439+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 
package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

	
	rule "SimpleCgheck11"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end

2023-09-05T17:07:00.827+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-05T17:07:00.828+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 1
2023-09-05T17:08:51.365+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-05T17:08:51.367+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-05T17:08:51.371+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-05T17:08:51.594+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-05T17:08:51.594+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-05T17:08:51.821+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-05T17:08:51.840+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-05T17:08:52.022+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-05T17:08:58.005+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-05T17:08:58.048+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-05T17:08:58.048+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-05T17:08:58.060+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 
package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

	
	rule "SimpleCgheck11"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end

2023-09-05T17:08:58.461+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-05T17:08:58.461+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 1
2023-09-05T17:09:50.627+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-05T17:09:50.629+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-05T17:09:50.633+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-05T17:09:50.852+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-05T17:09:50.852+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-05T17:09:51.088+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-05T17:09:51.109+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-05T17:09:51.315+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-05T17:09:55.375+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-05T17:09:55.404+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-05T17:09:55.405+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-05T17:09:55.420+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 
package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

	
	rule "SimpleCgheck11"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end

2023-09-05T17:09:55.867+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-05T17:09:55.868+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 1
2023-09-05T17:10:43.575+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2023-09-05T17:10:43.576+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2023-09-05T17:10:43.579+0200 [main] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2023-09-05T17:10:43.867+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2023-09-05T17:10:43.867+0200 [main] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2023-09-05T17:10:44.098+0200 [main] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2023-09-05T17:10:44.116+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2023-09-05T17:10:44.320+0200 [Thread-4] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/ConcernMonitoringRest/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2023-09-05T17:10:50.054+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - sending rule
2023-09-05T17:10:50.079+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - rule sent
2023-09-05T17:10:50.080+0200 [main] INFO  it.cnr.isti.labsedc.concern.consumer.Consumer - Rule to be monitored Sent
2023-09-05T17:10:50.091+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules 
package it.cnr.isti.labsedc.concern.event;

import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

	
	rule "SimpleCgheck11"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
	then					                 
		retract($aEvent);
	end

2023-09-05T17:10:50.559+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2023-09-05T17:10:50.559+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 1
